<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://code.alibabatech.com/schema/dubbo  
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">
    <context:component-scan base-package="com.gsafety.bigdata.lifeline"/>
    <!--<bean id="ApplicationContext" class="com.gsafety.bigdata.lifeline.util.ApplicationContextUtil"></bean>-->

<!--<task:scheduled-tasks>-->
    <!--<task:scheduled ref="" method=""/>-->
<!--</task:scheduled-tasks>-->
    <task:annotation-driven />
    <!--<import resource="hive-jdbc.xml"></import>-->
    <import resource="phoenix-jdbc.xml"></import>
    <bean id="hBaseDao" class="com.gsafety.bigdata.lifeline.dao.HBaseDao"></bean>
    <bean name="kylindataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">

        <property name="url" value="jdbc:kylin://10.5.4.40:7070/LifeLineProject"/>
        <property name="username" value="ADMIN"/>
        <property name="password" value="KYLIN"/>
        <property name="driverClassName" value="org.apache.kylin.jdbc.Driver"/>

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="10"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>
        <!--<property name="dbType" value=""></property>-->
        <!--<property name="validationQuery" value="${validationQuery}"/>-->
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- 监控数据库 -->
        <property name="filters" value="mergeStat"/>
    </bean>

    <bean id="kylinjdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="kylindataSource"/>
        <property name="queryTimeout" value="10000"/>
    </bean>
    <!-- 具体的实现bean -->
    <bean id="BridgeQueryService"
          class="com.gsafety.bigdata.lifeline.service.impl.BridgeQueryServiceImpl">
        <property name="hBaseDao" ref="hBaseDao"></property>
        <property name="kylinJdbcTemplate" ref="kylinjdbcTemplate"></property>
        <property name="phoenixJdbcDao" ref="phoenixJdbcDao"></property>
        <!--<property name="hiveJdbcDao" ref="hiveJdbcDao"></property>-->
    </bean>
    <bean id="WaterQueryService"
          class="com.gsafety.bigdata.lifeline.service.impl.WaterQueryServiceImpl">
        <!--<property name="hBaseDao" ref="hBaseDao"></property>-->
        <property name="phoenixJdbcDao" ref="phoenixJdbcDao"></property>
    </bean>
    <bean id="GasQueryService"
          class="com.gsafety.bigdata.lifeline.service.impl.GasQueryServiceImpl">
        <!--<property name="hBaseDao" ref="hBaseDao"></property>-->
        <property name="phoenixJdbcDao" ref="phoenixJdbcDao"></property>
    </bean>

    <bean id="ExportQueryService"
          class="com.gsafety.bigdata.lifeline.service.impl.ExportQueryServiceImpl">
        <!--<property name="kylinjdbcTemplate" ref="kylinjdbcTemplate"></property>-->
        <!--<property name="fastDFSTemplateFactory" ref="fastDFSTemplateFactory"></property>-->
    </bean>
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="lifeline_dubbdo_provider"/>
    <dubbo:monitor protocol="registry"/>
    <!-- 使用zookeeper注册中心暴露服务地址 -->
    <!--<dubbo:registry address="zookeeper://10.5.4.15:12181"-->
                    <!--check="false"/>-->
    <dubbo:registry address="zookeeper://10.5.4.112:12181?backup=10.5.4.113:12181,10.5.4.114:12181" />
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20888" />
    <!-- 声明需要暴露的服务接口 -->

    <!-- <bean id="hbaseDao" class="com.gsafety.bigdata.lifeline.dao.HBaseDao"
        init-method="init" ></bean> -->

    <dubbo:service timeout="40000" retries="3"
                   interface="com.gsafety.bigdata.lifeline.service.BridgeQueryService" ref="BridgeQueryService"
                   version="1.4"/>
    <dubbo:service timeout="40000" retries="3"
                   interface="com.gsafety.bigdata.lifeline.service.WaterQueryService" ref="WaterQueryService"
                   version="1.4"/>
    <dubbo:service timeout="40000" retries="3"
                   interface="com.gsafety.bigdata.lifeline.service.GasQueryService" ref="GasQueryService"
                   version="1.4"/>
    <!--引入导出原始数据的获得下载地址url接口-->
    <dubbo:service timeout="40000" retries="3"
                   interface="com.gsafety.bigdata.lifeline.service.ExportQueryService" ref="ExportQueryService"
                   version="1.4"/>
    <!--引入fastdfs的配置文件-->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:fastdfs-client.properties"/>
    <bean id="fastDFSTemplateFactory" class="com.gszone.lifeline.bscplt.ishare.coresvc.cpnts.dfs.FastDFSTemplateFactory"
          init-method="init">
        <!--连接超时的时限，单位为秒-->
        <property name="g_connect_timeout" value="${fastdfs.connect_timeout_in_seconds}"/>
        <!--网络超时的时限，单位为秒-->
        <property name="g_network_timeout" value="${fastdfs.network_timeout_in_seconds}"/>
        <!--防盗链配置-->
        <property name="g_anti_steal_token" value="${fastdfs.http_anti_steal_token}"/>
        <property name="g_secret_key" value="${fastdfs.http_secret_key}"/>
        <property name="poolConfig">
            <bean class="com.gszone.lifeline.bscplt.ishare.coresvc.cpnts.dfs.pool.PoolConfig">
                <!--池的大小-->
                <property name="maxTotal" value="${fastdfs.pool_maxtotal}"/>
                <!--连接池中最大空闲的连接数-->
                <property name="maxIdle" value="${fastdfs.pool_maxidle}"/>
            </bean>
        </property>
        <!--tracker的配置 ","逗号分隔-->
        <property name="trackers" value="${fastdfs.tracker_servers}"/>
        <!--HTTP访问服务的端口号-->
        <property name="g_tracker_http_port" value="${fastdfs.http_tracker_http_port}"/>
        <property name="g_charset" value="${fastdfs.charset}"/>
        <!--nginx的对外访问地址，如果没有端口号，将取g_tracker_http_port配置的端口号 ","逗号分隔-->
        <property name="nginxs" value="${fastdfs.http_nginx_addr}"/>
    </bean>

    <!--注入模板类-->
    <bean id="fastDFSTemplate" class="com.gszone.lifeline.bscplt.ishare.coresvc.cpnts.dfs.FastDFSTemplate">
        <constructor-arg ref="fastDFSTemplateFactory"/>
    </bean>

</beans>  